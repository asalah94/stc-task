plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-web-services")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.h2database:h2")  // H2 Database for testing purposes
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("com.h2database:h2")
    annotationProcessor("org.projectlombok:lombok")
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    compileOnly 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.postgresql:postgresql:42.2.23'
    implementation group: 'com.graphql-java', name: 'graphql-spring-boot-starter', version: '3.1.1'

}


tasks.named('test') {
    useJUnitPlatform()
}
compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
    options.compilerArgs += ["-parameters"]

}